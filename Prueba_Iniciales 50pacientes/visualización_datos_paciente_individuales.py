# -*- coding: utf-8 -*-
"""Visualización Datos Paciente Individuales.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kJdHuWts6UtbkXszYzKRQHTqkDJ2MRAL

Inicio del curso de python para la aplicación en el proyecto de grado.
"""

# FUNCIÓN PARA LLAMAR EL PACIENTE
# Creación de diccionario para llamar los pacientes 

def diccionario(numero):

  global ruta
  Tupla_Pacientes= ["Vacio",
                           "/content/sample_data/p000001.psv",
                           "/content/sample_data/p000002.psv",
                           "/content/sample_data/p000003.psv",
                           "/content/sample_data/p000004.psv",
                           "/content/sample_data/p000005.psv",
                           "/content/sample_data/p000006.psv",
                           "/content/sample_data/p000007.psv",
                           "/content/sample_data/p000008.psv",
                           "/content/sample_data/p000009.psv",
                           "/content/sample_data/p000010.psv",
                           "/content/sample_data/p000011.psv",
                           "/content/sample_data/p000012.psv",
                           "/content/sample_data/p000013.psv",
                           "/content/sample_data/p000014.psv",
                           "/content/sample_data/p000015.psv",
                           "/content/sample_data/p000016.psv",
                           "/content/sample_data/p000017.psv",
                           "/content/sample_data/p000018.psv",
                           "/content/sample_data/p000019.psv",
                           "/content/sample_data/p000020.psv",
                           "/content/sample_data/p000021.psv",
                           "/content/sample_data/p000022.psv",
                           "/content/sample_data/p000023.psv",
                           "/content/sample_data/p000024.psv",
                           "/content/sample_data/p000025.psv",
                           "/content/sample_data/p000026.psv",
                           "/content/sample_data/p000027.psv",
                           "/content/sample_data/p000028.psv",
                           "/content/sample_data/p000029.psv",
                           "/content/sample_data/p000030.psv",
                           "/content/sample_data/p000031.psv",
                           "/content/sample_data/p000032.psv",
                           "/content/sample_data/p000033.psv",
                           "/content/sample_data/p000034.psv",
                           "/content/sample_data/p000035.psv",
                           "/content/sample_data/p000036.psv",
                           "/content/sample_data/p000037.psv",
                           "/content/sample_data/p000038.psv",
                           "/content/sample_data/p000039.psv",
                           "/content/sample_data/p000040.psv",
                           "/content/sample_data/p000041.psv",
                           "/content/sample_data/p000042.psv",
                           "/content/sample_data/p000043.psv",
                           "/content/sample_data/p000044.psv",
                           "/content/sample_data/p000045.psv",
                           "/content/sample_data/p000046.psv",
                           "/content/sample_data/p000047.psv",
                           "/content/sample_data/p000048.psv",
                           "/content/sample_data/p000049.psv",
                           "/content/sample_data/p000050.psv"]
                           
  DPacientes= { Tupla_Pacientes[0]:"Vacio",
                Tupla_Pacientes[1]:"/content/sample_data/p000001.psv",
                Tupla_Pacientes[2]:"/content/sample_data/p000002.psv",
                Tupla_Pacientes[3]:"/content/sample_data/p000003.psv",
                Tupla_Pacientes[4]:"/content/sample_data/p000004.psv",
                Tupla_Pacientes[5]:"/content/sample_data/p000005.psv",
                Tupla_Pacientes[6]:"/content/sample_data/p000006.psv",
                Tupla_Pacientes[7]:"/content/sample_data/p000007.psv",
                Tupla_Pacientes[8]: "/content/sample_data/p000008.psv",
                Tupla_Pacientes[9]:"/content/sample_data/p000009.psv",
                Tupla_Pacientes[10]:"/content/sample_data/p000010.psv",
                Tupla_Pacientes[11]:"/content/sample_data/p000011.psv",
                Tupla_Pacientes[12]:"/content/sample_data/p000012.psv",
                Tupla_Pacientes[13]:"/content/sample_data/p000013.psv",
                Tupla_Pacientes[14]:"/content/sample_data/p000014.psv",
                Tupla_Pacientes[15]:"/content/sample_data/p000015.psv",
                Tupla_Pacientes[16]: "/content/sample_data/p000016.psv",
                Tupla_Pacientes[16]:"/content/sample_data/p000017.psv",
                Tupla_Pacientes[18]:"/content/sample_data/p000018.psv",
                Tupla_Pacientes[19]:"/content/sample_data/p000019.psv",
                Tupla_Pacientes[20]:"/content/sample_data/p000020.psv",
                Tupla_Pacientes[21]:"/content/sample_data/p000021.psv",
                Tupla_Pacientes[22]:"/content/sample_data/p000022.psv",
                Tupla_Pacientes[23]:"/content/sample_data/p000023.psv",
                Tupla_Pacientes[24]:"/content/sample_data/p000024.psv",
                Tupla_Pacientes[25]:"/content/sample_data/p000025.psv",
                Tupla_Pacientes[26]:"/content/sample_data/p000026.psv",
                Tupla_Pacientes[27]:"/content/sample_data/p000027.psv",
                Tupla_Pacientes[28]:"/content/sample_data/p000028.psv",
                Tupla_Pacientes[29]:"/content/sample_data/p000029.psv",
                Tupla_Pacientes[30]:"/content/sample_data/p000030.psv",
                Tupla_Pacientes[31]:"/content/sample_data/p000031.psv",
                Tupla_Pacientes[32]: "/content/sample_data/p000032.psv",
                Tupla_Pacientes[33]:"/content/sample_data/p000033.psv",
                Tupla_Pacientes[34]:"/content/sample_data/p000034.psv",
                Tupla_Pacientes[35]: "/content/sample_data/p000035.psv",
                Tupla_Pacientes[36]: "/content/sample_data/p000036.psv",
                Tupla_Pacientes[37]: "/content/sample_data/p000037.psv",
                Tupla_Pacientes[38]: "/content/sample_data/p000038.psv",
                Tupla_Pacientes[39]: "/content/sample_data/p000039.psv",
                Tupla_Pacientes[40]: "/content/sample_data/p000040.psv",
                Tupla_Pacientes[41]:"/content/sample_data/p000041.psv",
                Tupla_Pacientes[42]: "/content/sample_data/p000042.psv",
                Tupla_Pacientes[43]: "/content/sample_data/p000043.psv",
                Tupla_Pacientes[44]: "/content/sample_data/p000044.psv",
                Tupla_Pacientes[45]:"/content/sample_data/p000045.psv",
                Tupla_Pacientes[46]:"/content/sample_data/p000046.psv",
                Tupla_Pacientes[47]:"/content/sample_data/p000047.psv",
                Tupla_Pacientes[48]:"/content/sample_data/p000048.psv",
                Tupla_Pacientes[49]:"/content/sample_data/p000049.psv",
                Tupla_Pacientes[50]:"/content/sample_data/p000050.psv"
                }

  ruta= DPacientes[Tupla_Pacientes[numero]]

# LLAMAR DATOS DEMOGRAFICOS

def datos_demograficos_paciente(ruta):
  
  import matplotlib.pyplot as plt
  import pandas as pd

  psv_path = ruta
  datos = pd.read_table(psv_path, sep='|')

  dTabla = datos[['Age', 'Gender', 'Unit1', 'Unit2', 'HospAdmTime', 'ICULOS', 'SepsisLabel']].copy()
  
  return print(dTabla)

# LLAMR DATOS CLINICOS

def datos_clinicos_paciente(ruta):
  
  import matplotlib.pyplot as plt
  import numpy as np
  import pandas as pd

  psv_path = ruta
  datos = pd.read_table(psv_path, sep='|')

  fig = plt.figure(figsize=(25,25))
  fig.tight_layout()

  plt.subplot(3,3,1) # Subplot para visualizar las graficas en un mismo plot
  plt.plot(datos['MAP'],'o-', label= 'datos', linewidth = 0.5) #Datos filtrados
  plt.ylim(45,140) # Limite en en Y
  plt.axhline(y=120, xmin=0, color= 'red') # Maximo normal de presión arterial
  plt.axhline(y=80, xmin=0, color= 'red') # Minimo normal de presión arterial
  plt.title("Presión arterial media (MAP)") # Titulo grafica
  plt.ylabel('Escala') # Titulo Y
  plt.xlabel('Semana') # Titulo X
  
  plt.subplot(3,3,2) # Subplot para visualizar las graficas en un mismo plot
  plt.plot(datos['HR'],'o-', label= 'datos', linewidth = 1)  #Datos filtrados
  plt.ylim(40,120) # Limite en en Y
  plt.axhline(y=60, xmin=0, color= 'red') # Maximo normal de presión arterial
  plt.axhline(y=100, xmin=0, color= 'red') # Minimo normal de presión arterial
  plt.title("Frecuencia cardiaca (HR)")
  plt.ylabel('Escala')
  plt.xlabel('Semana')

  plt.subplot(3,3,3) # Subplot para visualizar las graficas en un mismo plot
  plt.plot(datos['O2Sat'],'o-', label= 'datos', linewidth = 1) #Datos filtrados
  plt.ylim(80,110) # Limite en en Y
  plt.axhline(y=90, xmin=0, color= 'red') # Maximo normal de presión arterial
  plt.axhline(y=100, xmin=0, color= 'red') # Minimo normal de presión arterial
  plt.title("Saturación de O2 (O2Sat)")
  plt.ylabel('Escala')
  plt.xlabel('Semana')
  
  plt.subplot(3,3,4)
  plt.plot(datos['Resp'],'o-', label= 'datos', linewidth = 1)
  #plt.xlim(0,50)
  plt.ylim(10,30)
  plt.axhline(y=12, xmin=0, color= 'red')
  plt.axhline(y=18, xmin=0, color= 'red')
  plt.title("Respiración (Resp)")
  plt.ylabel('Escala')
  plt.xlabel('Semana')

  plt.subplot(3,3,5)
  plt.plot(datos['Temp'],'o-', label= 'datos', linewidth = 1)
  #plt.xlim(0,50)
  plt.ylim(35,40)
  plt.axhline(y=36, xmin=0, color= 'red')
  plt.axhline(y=37, xmin=0, color= 'red')
  plt.title("Temperatura (Temp)")
  plt.ylabel('Escala')
  plt.xlabel('Semana')

  plt.subplot(3,3,6)
  plt.plot(datos['Glucose'],'o-', label= 'datos', linewidth = 1)
  #plt.xlim(0,50)
  plt.ylim(50,160)
  plt.axhline(y=70, xmin=0, color= 'red')
  plt.axhline(y=100, xmin=0, color= 'red')
  plt.title("Glucosa (Glucose)")
  plt.ylabel('Escala')
  plt.xlabel('Semana')
  
  plt.subplot(3,3,7)
  plt.plot(datos['WBC'],'o-', label= 'datos', linewidth = 1)
  #plt.xlim(0,50)
  #plt.ylim(10,40)
  plt.title("Leucositos (WBC)")
  plt.ylabel('Escala')
  plt.xlabel('Semana')

# TABLA DATOS CLINICOS FILTRADOS

def tabla_Paciente(ruta):
  
  import matplotlib.pyplot as plt
  import pandas as pd

  psv_path = ruta
  datos = pd.read_table(psv_path, sep='|')

  dTabla = datos[['MAP', 'HR', 'O2Sat', 'Resp', 'Temp', 'Glucose', 'WBC']].copy()
  
  return print(dTabla)

numero = int(input('Numero de paciente que desea verificar 1-50: '))
print("Datos del paciente",numero,"\n")
diccionario(numero)

print("DATOS DEMOGRAFICOS PACIENTE: ",numero,"\n")
datos_demograficos_paciente(ruta)
print("\n")

print("TABLA DATOS PACIENTE: ",numero,"\n")
tabla_Paciente(ruta)
print("\n")

print("DATOS CLINICOS (PLOTS) PACIENTE: ",numero,"\n")
datos_clinicos_paciente(ruta)



