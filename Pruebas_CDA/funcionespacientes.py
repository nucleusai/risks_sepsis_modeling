# -*- coding: utf-8 -*-
"""FuncionesPacientes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mT0KZaOU87D9V2iWz0ngpX2PimnQzvq7
"""

def Agrupacion_SepsisLabel(ruta):
  
  import matplotlib.pyplot as plt
  import pandas as pd
  
  global positivos_SepsisLabel
  global control_SepsisLabel

  csv_path = ruta
  datos = pd.read_csv(csv_path, sep=',')

  paciente = datos.iloc[0]['Paciente']
  band = False
  band2 = False
  positivos_SepsisLabel = 0
  control_SepsisLabel = 0 

  for i in range(0,len(datos)):
     if (datos.loc[i, 'Paciente'] != paciente):
        paciente = datos.iloc[i]['Paciente']
        band = False
        if (band2 == True):
            band2 = False
        else:
           control_SepsisLabel = control_SepsisLabel + 1
   
     if (datos.loc[i, 'SepsisLabel'] == 1 and datos.loc[i, 'Paciente'] == paciente and band == False): 
        positivos_SepsisLabel = positivos_SepsisLabel + 1
        band = True
        band2= True
  
  return (positivos_SepsisLabel, control_SepsisLabel)

def Agrupacion_Sepsis_SIRS(ruta):
  
  import matplotlib.pyplot as plt
  import pandas as pd
  
  global positivos_Sepsis_SIRS
  global control_Sepsis_SIRS

  csv_path = ruta
  datos = pd.read_csv(csv_path, sep=',')

  paciente = datos.iloc[0]['Paciente']
  band = False
  band2 = False
  positivos_Sepsis_SIRS = 0
  control_Sepsis_SIRS = 0 

  for i in range(0,len(datos)):
     if (datos.loc[i, 'Paciente'] != paciente):
        paciente = datos.iloc[i]['Paciente']
        band = False
        if (band2 == True):
            band2 = False
        else:
           control_Sepsis_SIRS = control_Sepsis_SIRS + 1
   
     if (datos.loc[i, 'Sepsis_SIRS'] == 1 and datos.loc[i, 'Paciente'] == paciente and band == False): 
        positivos_Sepsis_SIRS = positivos_Sepsis_SIRS + 1
        band = True
        band2= True
    
  return (positivos_Sepsis_SIRS, control_Sepsis_SIRS)

def Agrupacion_Sepsis_SOFA(ruta):
  
  import matplotlib.pyplot as plt
  import pandas as pd
  
  global positivos_Sepsis_SOFA
  global control_Sepsis_SOFA

  csv_path = ruta
  datos = pd.read_csv(csv_path, sep=',')

  paciente = datos.iloc[0]['Paciente']
  band = False
  band2 = False
  positivos_Sepsis_SOFA = 0
  control_Sepsis_SOFA = 0 

  for i in range(0,len(datos)):
     if (datos.loc[i, 'Paciente'] != paciente):
        paciente = datos.iloc[i]['Paciente']
        band = False
        if (band2 == True):
            band2 = False
        else:
           control_Sepsis_SOFA = control_Sepsis_SOFA + 1
   
     if (datos.loc[i, 'GROUP_SOFA'] != 0 and datos.loc[i, 'Paciente'] == paciente and band == False): 
        positivos_Sepsis_SOFA = positivos_Sepsis_SOFA + 1
        band = True
        band2= True
  
  return (positivos_Sepsis_SOFA, control_Sepsis_SOFA)

def DataFrameResult():
  
  global dfresult

  columna = ['Positivos', 'Control'] 
  valores = [positivos_SepsisLabel, control_SepsisLabel, positivos_Sepsis_SIRS, control_Sepsis_SIRS, positivos_Sepsis_SOFA, control_Sepsis_SOFA  ]
  indice =['Sepsis_Label', 'Sepsis_SIRS', 'GROUP_SOFA']
  
  result = { 'Positivos': [positivos_SepsisLabel, positivos_Sepsis_SIRS, positivos_Sepsis_SOFA ], 'Control':[control_SepsisLabel,control_Sepsis_SIRS, control_Sepsis_SOFA]}
  dfresult = pd.DataFrame(data=result, index= indice)

ruta='/content/sample_data/SepsisResult.csv'

Agrupacion_SepsisLabel(ruta)
Agrupacion_Sepsis_SIRS(ruta)
Agrupacion_Sepsis_SOFA(ruta)
DataFrameResult()

print(dfresult)

print (positivos_SepsisLabel,control_SepsisLabel, positivos_Sepsis_SIRS, control_Sepsis_SIRS, positivos_Sepsis_SOFA, control_Sepsis_SOFA)

import matplotlib 
import matplotlib.pyplot as plt 
import numpy as np

dfresult.plot(kind = 'bar',figsize=(10,20));

import matplotlib 
import matplotlib.pyplot as plt 
import numpy as np

dfresult.plot(kind = 'bar',
             width=0.8,
             subplots=True,
             figsize=(10,20));